{"version":3,"file":"main.cd61819fcf2de2339ebd.bundle.js","sources":["webpack:///./src/components/organisms/ListView/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { VIEW_TYPE, IContent } from '../../../types';\nimport MatrixView from './MatrixView/index';\nimport SlideView from './SlideView/index';\nimport { useList, useWindowDimensions } from '../../../hooks/index';\n\ninterface IListViewProps {\n  list: IContent[];\n  type: \"slide\" | \"matrix\";\n  width?: number;\n  widthNum?: number;\n  height?: number;\n  heightNum?: number;\n  totalWidthNum?: number;\n  index?: number;\n  title?: string;\n  theme?: \"light\" | \"dark\";\n}\n\nexport const ListView = (props: IListViewProps) => {\n  const list = useList(props.list);\n  const windowDimension = useWindowDimensions();\n  const width = (props.width===void 0) ? windowDimension.width : props.width;\n  const height = (props.height===void 0) ? (windowDimension.width/5.4)/6*5*2 : props.height;\n\n  return (\n    props.type === VIEW_TYPE.SLIDE ?\n    <SlideView list={list} title={props.title} index={props.index && props.index} width={width} height={height} widthNum={props.widthNum} theme ={props.theme}/> :\n    <MatrixView list={list} title={props.title} index={props.index && props.index} width = {width} height={height} widthNum= {props.widthNum} heightNum = {props.heightNum} totalWidthNum={props.totalWidthNum} theme = {props.theme}/>\n  );\n};try {\n    // @ts-ignore\n    ListView.displayName = \"ListView\";\n    // @ts-ignore\n    ListView.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListView\", \"props\": { \"list\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"list\", \"required\": true, \"type\": { \"name\": \"IContent[]\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"\\\"slide\\\" | \\\"matrix\\\"\" } }, \"width\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"widthNum\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"widthNum\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"height\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"heightNum\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"heightNum\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"totalWidthNum\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"totalWidthNum\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"\\\"light\\\" | \\\"dark\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/organisms/ListView/index.tsx#ListView\"] = { docgenInfo: ListView.__docgenInfo, name: \"ListView\", path: \"src/components/organisms/ListView/index.tsx#ListView\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAAA","sourceRoot":""}